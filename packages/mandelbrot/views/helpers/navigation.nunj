{% import "helpers/status.nunj" as status %}
{% import "helpers/utils.nunj" as utils %}

{% macro tree(root, current) %}
<div class="Tree" data-behaviour="tree" id="tree-{{ root.name }}">
    <h3 class="Tree-title">{{ root.title }}</h3>
    <ul class="Tree-items Tree-depth-1">
        {{ leaves(root.filter('isHidden', false).items(), root, current, 2) }}
    </ul>
</div>
{% endmacro %}

{% macro leaves(items, root, current, depth) %}
    {% for item in items %}
        {% if item.type == 'collection' or (item.type == 'component' and item.variants().size > 1) %}
        <li class="Tree-item Tree-collection Tree-depth-{{ depth }}" data-behaviour="collection" id="tree-{{ root.name }}-collection-{{ item.handle }}">
            <h4 class="Tree-collectionLabel" data-role="toggle">
                <span>{{ item.label }}</span>
            </h4>
            <ul class="Tree-collectionItems" data-role="items">
            {% if item.type == 'component' %}
            {% set items = item.variants().items() %}
            {% else %}
            {% set items = item.items() %}
            {% endif %}
            {{ leaves(items, root, current, (depth + 1)) }}
            </ul>
        </li>
        {% else %}
        {% set isCurrent = true if (current and (current.id == item.id)) else false %}
        <li class="Tree-item Tree-entity{% if isCurrent %} is-current{% endif %}"{% if isCurrent %} data-state="current"{% endif %} data-role="item">
            <a class="Tree-entityLink" href="{{ utils.urlFor(item) }}" data-pjax>
                <span>{{ item.label }}</span>
                {% if item.status %}{{ status.unlabelled(item.status) }}{% endif %}
            </a>
        </li>
        {% endif %}
    {% endfor %}
{% endmacro %}
