{% import "helpers/status.nunj" as status %}

{% macro tree(root, current) %}
<div class="Tree" data-behaviour="tree" id="tree-{{ root.name }}">
    <h3 class="Tree-title">{{ root.title }}</h3>
    <ul class="Tree-items Tree-depth-1">
        {{ leaves(root.filter('isHidden', false).items(), root, current, 2) }}
    </ul>
</div>
{% endmacro %}

{% macro leaves(items, root, current, depth) %}
    {% for item in items %}
        {% if item.type == 'collection' %}
        <li class="Tree-item Tree-collection Tree-depth-{{ depth }}" data-behaviour="collection" id="tree-{{ root.name }}-collection-{{ item.handle }}">
            <h4 class="Tree-collectionLabel" data-role="toggle">
                <span>{{ item.label }}</span>
            </h4>
            <ul class="Tree-collectionItems" data-role="items">
            {{ leaves(item.items(), root, current, (depth + 1)) }}
            </ul>
        </li>
        {% else %}
        {% set isCurrent = true if (current and (current.handle == item.handle)) else false %}
        <li class="Tree-item Tree-entity{% if isCurrent %} is-current{% endif %}"{% if isCurrent %} data-state="current"{% endif %} data-role="item">
            <a class="Tree-entityLink" href="#" data-pjax>
                <span>{{ item.label }}</span>
                {% if item.status %}{{ status.unlabelled(item.status) }}{% endif %}
            </a>
        </li>
        {% endif %}
    {% endfor %}
{% endmacro %}

{# {% macro components(items, current, maxDepth, navSort, currentDepth) %}

    {% for item in items %}
        {% if item.type == 'collection' %}
        <li class="MainNav-item MainNav-item--group MainNav-toggled">
            <h4 class="MainNav-itemLabel MainNav-heading MainNav-subSectionToggle">{{ item.labelPathFrom(currentDepth-1) if currentDepth >= maxDepth else item.label }}</h4>
            <ul class="MainNav-children">
            {% set nextItems = item.squash() if (currentDepth + 1) >= maxDepth else item %}
            {{ components(nextItems.orderBy(navSort).items(), current, (currentDepth + 1), maxDepth) }}
            </ul>
        </li>
        {% else %}
        <li class="MainNav-item MainNav-item--sub MainNav-item--component{% if current and (current.handle == item.handle) %} is-current{% endif %}" data-status="{{ status.name }}">
            <a class="MainNav-itemLabel MainNav-link" href="{{ frctl.web.theme.urlFromRoute('component', {handle: item.handle }) }}" data-pjax>
                <span>{{ item.label }}</span> {{ comp.status(item.status) }}
            </a>
        </li>
        {% endif %}
    {% endfor %}
{% endmacro %}

{% macro pages(items, current) %}
    {% for item in items %}
        {% if item.type == 'collection' %}
        <li class="MainNav-item MainNav-item--group">
            <h4 class="MainNav-itemLabel MainNav-heading MainNav-subSectionHeading">{{ item.labelPath }}</h4>
            <ul class="MainNav-children">
            {{ pages(item.items(), current) }}
            </ul>
        </li>
        {% else %}
        {% if item.path != '' %}
        <li class="MainNav-item MainNav-item--sub MainNav-item--page{% if current and (current.handle == item.handle) %} is-current{% endif %}" data-status="{{ item.status.name }}">
            <a class="MainNav-itemLabel MainNav-link" href="{{ frctl.web.theme.urlFromRoute('page', {path: item.path }) }}" data-pjax>
                <span>{{ item.label }}</span>
            </a>
        </li>
        {% endif %}
        {% endif %}
    {% endfor %}
{% endmacro %} #}
