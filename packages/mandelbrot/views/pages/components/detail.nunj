{% extends "layouts/pjax.nunj" if frctl.web.request.isPjax else "layouts/frame.nunj" %}
{% import "helpers/image.nunj" as img %}
{% import "helpers/status.nunj" as status %}

{% set entity = frctl.components.find('@' + frctl.web.request.params.handle) %}
{% if not entity or entity.isHidden %}{% throw404 'Item not found' %}{% endif %}

{% set pageTitle   = entity.title %}
{% set previewUrl  = frctl.web.theme.urlFromRoute('preview', {handle: entity.handle}) %}

{% block content %}

<div class="Pen" data-behaviour="pen" id="pen-{{ entity.id }}">

    <div class="Pen-panel Pen-header">
        <h1 class="Pen-title">{{ entity.title }}</h1>
        <a class="Pen-newWindowLink" href="{{ previewUrl }}">{{ img.svg('icon-window', '#999', '22px', '22px' ) }}</a>
        {{ status.tag(entity.status) }}
    </div>

    <div class="Pen-panel Pen-preview Preview" data-behaviour="preview" id="preview-{{ entity.id }}">
        <div class="Preview-resizer" data-role="resizer">
            <iframe
                class="Preview-iframe"
                data-role="window"
                src="{{ previewUrl }}"
                sandbox="allow-same-origin allow-scripts"
                marginwidth="0" marginheight="0" frameborder="0" vspace="0" hspace="0" scrolling="yes"
                srcdoc="{{ entity | preview | escape }}">
            </iframe>
            <div class="Preview-handle" data-role="resize-handle"></div>
        </div>
        <div class="Preview-overlay"></div>
    </div>

    <div class="Pen-handle" data-role="resize-handle"></div>

    <div class="Pen-panel Pen-info" data-role="info">
        <div class="Browser" data-behaviour="browser" id="browser-{{ entity.id }}">

            <div class="Browser-controls">
                <ul class="Browser-tabs">
                    <li class="Browser-tab is-active" data-role="tab">
                        <a href="#browser-{{ entity.id }}-panel-code">{{ img.svg('icon-markup', '#666', '19px', '19px', '0 0 18 14' ) }} Code</a>
                    </li>
                    {% if entity.notes %}
                    <li class="Browser-tab" data-role="tab">
                        <a href="#browser-{{ entity.id }}-panel-notes">{{ img.svg('icon-notes', '#666', '19px', '19px' ) }} Notes</a>
                    </li>
                    {% endif %}
                </ul>
                {# <ul class="Browser-actions">
                    <li class="Browser-action"><a href="#">collapse</a></li>
                </ul> #}
            </div>

            <div class="Browser-panel Browser-code is-active" data-role="tab-panel" id="browser-{{ entity.id }}-panel-code">
                <div class="Browser-codeHeader">
                    {# <label for="">View: </label> #}
                    <select class="Browser-fileSelector">
                        <option value="source">Rendered Source</option>
                        <option value="view">View Template</option>
                        <option value="context">Context Data</option>
                        <optgroup label="Assets">
                            {% for asset in entity.assets().filter('isBinary', false).files().toArray() %}
                            <option value="{{ asset.base }}">{{ asset.base }}</option>
                            {% endfor %}
                        </optgroup>
                    </select>
                </div>

                <div class="Browser-files">
                        <div class="Browser-fileContent is-active">
                        <code class="Code Code--lang-html">
                            <pre>{{ entity | render | highlight('html') }}</pre>
                        </code>
                    </div>
                </div>
            </div>

            {% if entity.notes %}
            <div class="Browser-panel Browser-notes Prose" data-role="tab-panel" id="browser-{{ entity.id }}-panel-notes">
                {{ entity.notes }}
            </div>
            {% endif %}

        </div>
        {# <code>
            <pre>{{ entity | render | highlight('html') }}</pre>
        </code> #}
    </div>

</div>

{# <div class="panel-container-vertical">

            <div class="panel-top">
                top panel
            </div>

            <div class="splitter-horizontal">
            </div>

            <div class="panel-bottom">
                bottom panel
            </div>
        </div> #}

{% endblock %}
