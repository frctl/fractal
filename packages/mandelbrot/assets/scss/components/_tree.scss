.Tree {
    white-space: nowrap;
}

.Tree-title {
    @include font(caption);
    @include padding-inline(start, 1rem);
    color: $color-alpha;
    margin-bottom: 0.5rem;
    opacity: 0.6;
}

.Tree-collection {
    &.is-closed {
        background-color: transparent;

        .Tree-collectionItems {
            display: none;
        }

        .Tree-collectionLabel {
            span::before {
                [dir="ltr"] & {
                    background-image: url("../img/icon-navigation-closed-ltr.svg");
                }
                [dir="rtl"] & {
                    background-image: url("../img/icon-navigation-closed-rtl.svg");
                }
            }
        }
    }
}

.Tree-collectionLabel {
    @include font(navigation);
    padding-top: 0.375rem;
    padding-bottom: 0.375rem;
    color: $color-alpha;
    cursor: pointer;
    touch-action: manipulation;
    user-select: none;

    span {
        @include padding-inline(start, 0.75rem);
        @include margin-inline(start, -1.75rem);
        display: block;
        position: relative;
    }

    span::before {
        @include offset-inline(start);
        display: inline-block;
        position: absolute;
        top: 0.25rem;
        background-image: url("../img/icon-navigation-opened.svg");
        background-size: 8px 8px;
        background-repeat: no-repeat;
        background-position: 0 50%;
        width: 0.75rem;
        height: 0.75rem;
        opacity: 0.5;
        content: "";
    }
}

.Tree-item {
    @include font(navigation);
}

.Tree-entity {
    &:hover {
        background-color: lighten($color-alpha-tint-lightest, 30%);

        .Tree-entityLink {
            @include link-default(darken($color-accent, 15%), none);
        }
    }

    &.is-current {
        background-color: $color-alpha-tint-lightest;
    }
}

.Tree-entityLink {
    @include link-default($color-accent, none);
    display: flex;
    align-items: center;
    padding-top: 0.375rem;
    padding-bottom: 0.375rem;

    > * + * {
        @include margin-inline(start, 0.5rem);
    }
}

@for $i from 1 through 8 {
    .Tree-depth-#{$i} {
        $padLeft: ($i * 1rem);

        .Tree-collectionLabel,
        .Tree-entityLink {
            @include padding-inline(start, $padLeft);
        }
    }
}
